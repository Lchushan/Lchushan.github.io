(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{627:function(t,n,a){"use strict";a.r(n);var s=a(14),e=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"css-电子时钟"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css-电子时钟"}},[t._v("#")]),t._v(" CSS 电子时钟")]),t._v(" "),n("h3",{attrs:{id:"一、数字的变换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、数字的变换"}},[t._v("#")]),t._v(" 一、数字的变换")]),t._v(" "),n("p",[t._v("先看看数字是如何变换的。")]),t._v(" "),n("p",[t._v("在以前，如果要实现数字的递增变化，可能需要提前准备好这些数字，例如像这样")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("<span>\n <i>1</i>\n  <i>2</i>\n  ...\n  <i>59</i>\n</span>\n")])])]),n("p",[t._v("然后通过改变位移来实现。")]),t._v(" "),n("p",[t._v("但是，现在有更简洁的方式可以实现了，那就是 "),n("strong",[t._v("CSS @property")]),t._v("[2]，不了解这个的可以参考这篇文章："),n("strong",[t._v("CSS @property，让不可能变可能")]),t._v("[3]。这是干什么的呢？简单来讲，可以自定义属性，在这个例子中，"),n("strong",[t._v("可以让数字像颜色一样进行过渡和动画")]),t._v("，可能不太懂，直接看例子吧")]),t._v(" "),n("p",[t._v("假设 HTML 是这样的")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<span style="--num: 0"></span>\n')])])]),n("p",[t._v("我们让这个自定义变量在页面中展示出来，单纯的 "),n("code",[t._v("content")]),t._v("无法直接显示自定义变量，需要借助定时器，有兴趣的可以参考这篇文章："),n("strong",[t._v("小tips: 如何借助content属性显示CSS var变量值")]),t._v("[4]")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("span::after{\n  counter-reset: num var(--num);\n  content: counter(num);\n}\n")])])]),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/xvBbEKrVNtI3RO6Q6uRZKBY4xJClOtcfWGL007DJpWFnXqp6ARwrfL7xEI8dibArF7Ph32RbO9skQxFlRBYI1ow/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),n("p",[t._v("然后，可以通过"),n("code",[t._v(":hover")]),t._v("改变这个数字")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("span:hover::after{\n  --num: 59\n}\n")])])]),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_gif/xvBbEKrVNtI3RO6Q6uRZKBY4xJClOtcfEpAOpjJZLB5kMAC9UibKpiajlGbS1ibwZ5yLMk4d9ibsyE0lRFasy2Y5nQ/640?wx_fmt=gif&wxfrom=5&wx_lazy=1",alt:"图片"}})]),t._v(" "),n("p",[t._v("很生硬的从 0 变成 59 了，非常符合常规。如果利用 CSS property，情况就不一样了，需要改造的地方很少，先定义一下"),n("code",[t._v("--h")]),t._v("，然后给这个变量一个过渡时间，如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@property --h { \n  syntax: '<integer>';\n  inherits: false;\n  initial-value: 0;\n}\nspan::after{\n  transition: 1s --num;\n}\n")])])]),n("p",[t._v("神奇的一幕发生了")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_gif/xvBbEKrVNtI3RO6Q6uRZKBY4xJClOtcf9wLvUOXfNYlfP7TJJz9RIHxcPAicsSvt8UPwjGPqXIwWjoRO5DoEf5Q/640?wx_fmt=gif&wxfrom=5&wx_lazy=1",alt:"图片"}})]),t._v(" "),n("p",[t._v("看着好像不可思议？可以这么理解，通过"),n("code",[t._v("@property")]),t._v("定义后，这个变量本身可以单独设置过渡了，而不再取决于一些仅支持过渡的属性（"),n("code",[t._v("color")]),t._v("、"),n("code",[t._v("width")]),t._v("等）。甚至还能加上动画，需要用到"),n("code",[t._v("steps")]),t._v("方法，设置动画周期为无限，如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@keyframes num {\n  to {\n    --num: 10\n  }\n}\nspan{\n  animation: num 1s infinite steps(10);\n}\n")])])]),n("p",[t._v("时钟的基本运行原理就是这样了，"),n("strong",[t._v("一个无限循环的 CSS 动画！")])]),t._v(" "),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_gif/xvBbEKrVNtI3RO6Q6uRZKBY4xJClOtcftnpChKGf4icNfkDqdrQHDV8R80RLQyVspzsm06VMnroTtlUpnub8B0g/640?wx_fmt=gif&wxfrom=5&wx_lazy=1",alt:"图片"}})]),t._v(" "),n("h3",{attrs:{id:"二、时、分、秒"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、时、分、秒"}},[t._v("#")]),t._v(" 二、时、分、秒")]),t._v(" "),n("p",[t._v("下面来看具体时、分、秒的实现，HTML 如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<div class="time">\n  <span class="hour"></span>\n  <a class="split">:</a>\n  <span class="minitus"></span>\n  <a class="split">:</a>\n  <span class="seconds"></span>\n</div>\n')])])]),n("p",[t._v("给时、分、秒附上初始值")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@property --h { \n  syntax: '<integer>';\n  inherits: false;\n  initial-value: 0;\n}\n@property --m { \n  syntax: '<integer>';\n  inherits: false;\n  initial-value: 0;\n}\n@property --s { \n  syntax: '<integer>';\n  inherits: false;\n  initial-value: 0;\n}\n.hour::after{\n  counter-reset: hour var(--h);\n  content: counter(hour);\n}\n.minitus::after{\n  counter-reset: minitus var(--m);\n  content: counter(minitus);\n}\n.seconds::after{\n  counter-reset: seconds var(--s);\n  content: counter(seconds);\n}\n")])])]),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/xvBbEKrVNtI3RO6Q6uRZKBY4xJClOtcf2lNWKvIicicqklrVLV59Xu6eDlGVeaYeTBgaia0MiblkwQRgjqZn9NsHKA/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1",alt:"图片"}})]),t._v(" "),n("p",[t._v("这里的时、分、秒并没有联动关系，所以各自都需要单独的动画。下面就需要思考一下🤔，如果用 CSS 动画来实现，每个的动画起始点和时长是多少呢？")]),t._v(" "),n("p",[t._v("没错，就是你想的，时针是"),n("code",[t._v("0-23")]),t._v("，时长"),n("code",[t._v("24h")]),t._v("，分针是"),n("code",[t._v("0-59")]),t._v("，时长"),n("code",[t._v("60min")]),t._v("，秒针是"),n("code",[t._v("0-59")]),t._v("，时长"),n("code",[t._v("60s")]),t._v("，但是 CSS 中的时间单位只支持"),n("code",[t._v("秒(s)")]),t._v("或者"),n("code",[t._v("毫秒(ms)")]),t._v("，所以这里需要转换一下，时长分别是"),n("code",[t._v("60s*60*24")]),t._v("、"),n("code",[t._v("60s*60")]),t._v("、"),n("code",[t._v("60s")]),t._v("，具体实现如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@keyframes hour {\n  to {\n    --h: 24\n  }\n}\n@keyframes minitus {\n  to {\n    --m: 60\n  }\n}\n@keyframes seconds {\n  to {\n    --s: 60\n  }\n}\n.hour::after{\n  counter-reset: hour var(--h);\n  content: counter(hour);\n  animation: hour calc(60s * 60 * 24) infinite steps(24);\n}\n.minitus::after{\n  counter-reset: minitus var(--m);\n  content: counter(minitus);\n  animation: minitus calc(60s * 60) infinite steps(60);\n}\n.seconds::after{\n  counter-reset: seconds var(--s);\n  content: counter(seconds);\n  animation: seconds 60s infinite steps(60);\n}\n")])])]),n("p",[t._v("这里为了便于观察，将时间调快了10倍（60s => 6s），如下")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_gif/xvBbEKrVNtI3RO6Q6uRZKBY4xJClOtcf2ekRR0t8ENL3yRw1Zfm50LNzzNFZMdPMQq07Hm8vG0zopWVUoib8M7A/640?wx_fmt=gif&wxfrom=5&wx_lazy=1",alt:"图片"}})]),t._v(" "),n("h3",{attrs:{id:"三、时、分、秒自动补零"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、时、分、秒自动补零"}},[t._v("#")]),t._v(" 三、时、分、秒自动补零")]),t._v(" "),n("p",[t._v("上面的布局有个问题，1 位数和 2 位数宽度变化导致时钟整体都在“晃动”，所以需要在1位数时补上一个“0”。关于 CSS 补零，之前在文章 "),n("a",{attrs:{href:"http://mp.weixin.qq.com/s?__biz=MzIyMDc1NTYxNg==&mid=2247484376&idx=1&sn=0dca6d03090fac95c4de25f74915895f&chksm=97c66017a0b1e9012d5f5f893c45abd1e918d20a24dd799ff9625fe44ad142b02a6d3ba3b791&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[t._v("CSS 补全字符串？")]),n("OutboundLink")],1),t._v("中提到了 3 种方案，由于这里用了计数器，所以直接选择更改计数器样式的方法，通过"),n("code",[t._v("decimal-leading-zero")]),t._v("来实现，具体做法如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(".hour::after{\n  /**/\n  content: counter(hour, decimal-leading-zero);/*添加计数器样式*/\n}\n")])])]),n("p",[t._v("这样就和谐多了")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_gif/xvBbEKrVNtI3RO6Q6uRZKBY4xJClOtcfXMSX3ibMicv8bicrwlZnaCsx6JfsRGWg8k1icRCm5ULUwKuu5SmkJewiazg/640?wx_fmt=gif&wxfrom=5&wx_lazy=1",alt:"图片"}})]),t._v(" "),n("h3",{attrs:{id:"四、时间初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、时间初始化"}},[t._v("#")]),t._v(" 四、时间初始化")]),t._v(" "),n("p",[t._v("刚才都从"),n("code",[t._v("00:00:00")]),t._v("开始了，所以需要手动指定一下初始时间。假设现在是"),n("code",[t._v("19:26:30")]),t._v("，如何初始化呢？")]),t._v(" "),n("p",[t._v("这里需要用"),n("code",[t._v("animation-delay")]),t._v("来提前运动到未来指定位置，为了方便控制，使用三个变量"),n("code",[t._v("--dh")]),t._v("、"),n("code",[t._v("--dm")]),t._v("、"),n("code",[t._v("--ds")]),t._v("来表示初始时间，注意，由于"),n("code",[t._v("animation-delay")]),t._v("也只支持"),n("code",[t._v("秒(s)")]),t._v("或者"),n("code",[t._v("毫秒(ms)")]),t._v("，所以也同样需要转换，实现如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(":root{\n  --dh: 19;\n  --dm: 26;\n  --ds: 30;\n}\n.hour::after{\n  /**/\n  animation: hour calc(60s * 60 * 24) infinite steps(24);\n  animation-delay: calc( -60s * 60 * var(--dh) );\n}\n.minitus::after{\n  /**/\n  animation: minitus calc(60s * 60) infinite steps(60);\n  animation-delay: calc( -60s * var(--dm) );\n}\n.seconds::after{\n  /**/\n  animation: seconds 60s infinite steps(60);\n  animation-delay: calc( -1s * var(--ds) );\n}\n")])])]),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_gif/xvBbEKrVNtI3RO6Q6uRZKBY4xJClOtcfDQZ6qeiaeRAQwJVDRIpgOODlcolFD8G6oVvYo05R6bhopyHic2bTImvA/640?wx_fmt=gif&wxfrom=5&wx_lazy=1",alt:"图片"}})]),t._v(" "),n("p",[t._v("是不是有点奇怪？分钟在秒钟走到 30 的时候才变化，晚了半分钟。原因是这样的，虽然从数字上看，分钟是 26，但是还要考虑到秒钟的运动情况，比如像这种情况，分钟其实已经走了一半，应该是26.5（26 + 30 / 60），所以在计算时还需要加上偏移量。下面我们通过 JS 获取真实的时间，并修复偏移")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const d = new Date()\nconst h = d.getHours();\nconst m = d.getMinutes();\nconst s = d.getSeconds();\ndocument.body.style.setProperty('--ds', s)\ndocument.body.style.setProperty('--dm', m + s/60)\ndocument.body.style.setProperty('--dh', h + m/60 + s/3600)\n")])])]),n("p",[t._v("这样就正常了")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_gif/xvBbEKrVNtI3RO6Q6uRZKBY4xJClOtcflb8uU9HPOT538UFTichaeLbLj9Ww4zT6SJmhhYEUOMdiaD3Voj3fDohA/640?wx_fmt=gif&wxfrom=5&wx_lazy=1",alt:"图片"}})]),t._v(" "),n("h3",{attrs:{id:"五、闪烁的分隔符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五、闪烁的分隔符"}},[t._v("#")]),t._v(" 五、闪烁的分隔符")]),t._v(" "),n("p",[t._v("为了时钟看起来更加“动感”，可以给分隔符加上闪烁动画，代码如下")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("@keyframes shark {\n  0%, 100%{\n    opacity: 1;\n  }\n  50%{\n    opacity: 0;\n  }\n}\n.split{\n  animation: shark 1s step-end infinite;\n}\n")])])]),n("p",[t._v("现在看下最终的效果")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_gif/xvBbEKrVNtI3RO6Q6uRZKBY4xJClOtcf2GMO8rTfOUia8ZPddnAoRLUHQQ0QXAEgJYqc4r7RqOVoPDGJDf7GpfA/640?wx_fmt=gif&wxfrom=5&wx_lazy=1",alt:"图片"}})]),t._v(" "),n("p",[t._v("完整代码可以访问 "),n("strong",[t._v("CSS time (codepen.io)")]),t._v("[5]")]),t._v(" "),n("h3",{attrs:{id:"六、总结一下"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六、总结一下"}},[t._v("#")]),t._v(" 六、总结一下")]),t._v(" "),n("p",[t._v("想不到实现一个时钟效果，用到了那么多 CSS 知识和技巧，简单总结一下吧")]),t._v(" "),n("ol",[n("li",[t._v("CSS 实现本质是无限循环的 CSS 动画")]),t._v(" "),n("li",[t._v("灵活运用 CSS calc 计算")]),t._v(" "),n("li",[t._v("CSS 计数器可以将 CSS 变量通过 content 显示在页面")]),t._v(" "),n("li",[t._v("数字的变化现在可以通过 CSS @property 配合动画实现")]),t._v(" "),n("li",[t._v("时分秒的区别在于各自的动画时长、动画起始点不同")]),t._v(" "),n("li",[t._v("CSS 自动补零可以参考之前的文章，这里采用 decimal-leading-zero 实现")]),t._v(" "),n("li",[t._v("时间初始化其实就是指定动画 delay 值")]),t._v(" "),n("li",[t._v("指定初始值时还需要考虑到各自的偏移量，例如 19:30:30，此时的时针数字其实是 30.5")]),t._v(" "),n("li",[t._v("分隔符的闪烁动画")])]),t._v(" "),n("p",[t._v("其实整个实现过程就是一个不断思考、学习的过程，比如为了实现数字的变化，就必须去学习 @property 相关，为了实现补零，就需要去了解更深层次的计数器相关，还有用到的各种动画。")])])}),[],!1,null,null,null);n.default=e.exports}}]);